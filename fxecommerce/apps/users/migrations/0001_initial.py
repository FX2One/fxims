# Generated by Django 3.2.8 on 2023-04-12 19:47

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is_staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='is_superuser')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'employee'), (4, 'customer')], default=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='employee', serialize=False, to='users.user')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('last_name', models.CharField(db_column='LastName', db_index=True, max_length=20, verbose_name='Last name')),
                ('first_name', models.CharField(db_column='FirstName', max_length=10, verbose_name='First name')),
                ('title', models.CharField(db_column='Title', max_length=30, verbose_name='title')),
                ('title_of_courtesy', models.CharField(blank=True, db_column='TitleOfCourtesy', max_length=25, verbose_name='Title of Courtesy')),
                ('birth_date', models.DateField(blank=True, db_column='BirthDate', null=True, verbose_name='Birth date')),
                ('hire_date', models.DateField(blank=True, db_column='HireDate', null=True, verbose_name='Hire date')),
                ('address', models.CharField(db_column='Address', max_length=60, verbose_name='address')),
                ('city', models.CharField(db_column='City', max_length=15, verbose_name='City')),
                ('region', models.CharField(blank=True, db_column='Region', max_length=15, null=True, verbose_name='Region')),
                ('postal_code', models.CharField(db_column='PostalCode', db_index=True, max_length=10, verbose_name='Postal code')),
                ('country', models.CharField(db_column='Country', max_length=15, verbose_name='Country')),
                ('home_phone', models.CharField(db_column='HomePhone', max_length=24, verbose_name='Home phone')),
                ('extension', models.CharField(db_column='Extension', max_length=4, verbose_name='Extension')),
                ('photo', models.ImageField(blank=True, db_column='Photo', default='user_profile/employee/example_photo.png', upload_to='user_profile/employee', verbose_name='Photo')),
                ('notes', models.TextField(blank=True, db_column='Notes', verbose_name='Notes')),
                ('photo_path', models.CharField(blank=True, db_column='PhotoPath', max_length=255, verbose_name='Photo path')),
                ('slug', models.SlugField(null=True, unique=True)),
                ('reports_to', models.ForeignKey(blank=True, db_column='ReportsTo', null=True, on_delete=django.db.models.deletion.PROTECT, to='users.employee')),
                ('territories', models.ManyToManyField(blank=True, through='inventory.EmployeeTerritory', to='inventory.Territory', verbose_name='Territories')),
            ],
            options={
                'verbose_name_plural': 'Employees',
                'db_table': 'employee',
                'ordering': ['first_name'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='customer', serialize=False, to='users.user')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('image', models.ImageField(default='user_profile/customer/example_photo.png', upload_to='user_profile/customer')),
                ('company_name', models.CharField(db_column='CompanyName', max_length=40, verbose_name='Company name')),
                ('contact_name', models.CharField(db_column='ContactName', max_length=30, verbose_name='Contact name')),
                ('contact_title', models.CharField(db_column='ContactTitle', max_length=30, verbose_name='Contact title')),
                ('address', models.CharField(db_column='Address', max_length=60, verbose_name='Address')),
                ('city', models.CharField(db_column='City', max_length=15, verbose_name='City')),
                ('region', models.CharField(blank=True, db_column='Region', max_length=15, null=True, verbose_name='Region')),
                ('postal_code', models.CharField(db_column='PostalCode', max_length=10, verbose_name='Postal code')),
                ('country', models.CharField(db_column='Country', max_length=15, verbose_name='Country')),
                ('phone', models.CharField(db_column='Phone', max_length=24, verbose_name='Phone')),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=24, null=True, verbose_name='Fax')),
                ('slug', models.SlugField(null=True, unique=True)),
                ('customer_customer_demo', models.ManyToManyField(blank=True, through='inventory.CustomerCustomerDemo', to='inventory.CustomerDemographics', verbose_name='CustomerCustomerDemos')),
                ('customer_specialist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.employee')),
            ],
            options={
                'verbose_name_plural': 'Customers',
                'db_table': 'customer',
            },
        ),
    ]
